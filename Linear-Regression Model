import pandas as pd
from sklearn.preprocessing import StandardScaler, LabelEncoder, OneHotEncoder
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Read the dataset from a file
file_path = "/content/preprocessed_dataset.csv"
df = pd.read_csv(file_path)

# Drop any remaining non-numeric columns
non_numeric_cols = df.select_dtypes(include=['object']).columns
df.drop(columns=non_numeric_cols, inplace=True)

# Splitting the dataset into features and target variable
X = df.drop(columns=['Type'])  # Features
y = df['Type']  # Target variable

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 2: Create a linear regression model
model = LinearRegression()

# Step 3: Fit the model to the training data
model.fit(X_train, y_train)

# Step 4: Evaluate the model's performance
# Predict on the training set
train_predictions = model.predict(X_train)
train_mse = mean_squared_error(y_train, train_predictions)
print("Training MSE:", train_mse)

# Predict on the testing set
test_predictions = model.predict(X_test)
test_mse = mean_squared_error(y_test, test_predictions)
print("Testing MSE:", test_mse)
